%{
use strict;
use warnings;
%}

%token StringLiteral=   /('(?:[^']|\\')*'|"(?:[^"]|\\")*")/
%token Regex=           /(qr(.)(?:[^\2]|\\\2)*?\2)/
%token Identifier=      /([a-zA-Z_][a-zA-Z0-9_]*)/

%start yavi

%%

yavi
    : ebnf
    ;

ebnf
    : rulelist
    ;

rulelist
    : rule*
    ;

rule
    : id ':' alternatives ';'
        {{rulename => $_[1], alternatives => $_[3]}}
    ;

alternatives
    : alternative ('|' alternative)*
        {
            my @alts;

            push @alts, $_[1];
            for my $rest (@{$_[2]})
            {
                my ($bar, $alt)= @$rest;
                push @alts, $alt;
            }

            \@alts;
        }
    ;

alternative
    : element*
    ;

element
    : optional
    | zero_or_more
    | one_or_more
    | text
    | id
        {{kind => 'reference', value => $_[1]}}
    | '(' alternatives ')'
        {$_[2]}
    ;

optional
    : element '?'
        {{kind => 'element', value => $_[1], modifier => '?'}}
    ;

zero_or_more
    : element '*'
        {{kind => 'element', value => $_[1], modifier => '*'}}
    ;

one_or_more
    : element '+'
        {{kind => 'element', value => $_[1], modifier => '+'}}
    ;

text
    : StringLiteral
        {
            my $s= $_[1];
            $s=~ s/^['"]|['"]$//g;
            {kind => 'string', value => $s};
        }
    | Regex
        {
            my $s= $_[1];
            $s=~ s/^qr(.)//;
            $s=~ s/$1$//;
            {kind => 'regex', value => $s};
        }
    ;

id
    : Identifier
    ;

%%

1;
